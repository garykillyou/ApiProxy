@using ApiProxy.Areas.DB.Models
@{
    string Email = ViewBag.Email;
    ApiKeyInfo ApiKeyInfo = ViewBag.ApiKeyInfo;
    List<UrlReference> UrlReferences = ViewBag.UrlReferences;
    List<UrlReference> UnUrlReferences = ViewBag.UnUrlReferences;
}

@section Styles {
    <style>
        .active {
            background-color: #ECECEC;
        }

        .div-checkbox {
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .div-checkbox input[type="checkbox"] {
                transform-origin: center;
                transform: scale(2);
            }

        #input_FromUrl, #input_ToUrl {
            width: 370px;
        }
    </style>
}

<div class="row">
    <div class="col-5">
        <div class="card">
            <div class="card-header">
                <div class="row justify-content-between">
                    <div class="col-auto align-self-center">ApiKeyInfo</div>
                    @if( ApiKeyInfo == null )
                    {
                        <div class="col-auto">
                            <button class="btn btn-primary" onclick="AskApiKey()">請求金鑰</button>
                        </div>
                    }
                </div>
            </div>
            <div class="card-body">
                <table class="table table-bordered table-hover w-100">
                    <thead class="thead-dark">
                        <tr>
                            <th style="width: 50%">UserEmail</th>
                            <th style="width: 50%">ApiKey</th>
                        </tr>
                    </thead>
                    <tbody id="ApiKeyInfo">
                        @if( ApiKeyInfo != null )
                        {
                            <tr>
                                <td id="UserEmail" style="width: 50%;">@ApiKeyInfo.UserEmail</td>
                                <td style="width: 50%;">@ApiKeyInfo.ApiKey</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card mt-1">
            <div class="card-header">
                <div class="row justify-content-between">
                    <div class="col-auto align-self-center">可以使用的 UrlReference</div>
                    @if( ApiKeyInfo != null )
                    {
                        <div class="col-auto">
                            <button class="btn btn-danger" onclick="RemoveUrlReference()">刪除</button>
                        </div>
                    }
                </div>
            </div>
            <div class="card-body">
                <table class="table table-bordered w-100">
                    <thead class="thead-dark">
                        <tr>
                            <th style="width: 10%;">ID</th>
                            <th style="width: 45%;">FromUrl（不區分大小寫）</th>
                            <th style="width: 45%;">Description</th>
                        </tr>
                    </thead>
                    <tbody id="UrlReferences">
                        @if( UrlReferences != null )
                        {
                            foreach( UrlReference item in UrlReferences )
                            {
                                <tr>
                                    <td class="ID" style="width: 10%;">@item.ID</td>
                                    <td style="width: 45%;">@item.FromUrl</td>
                                    <td style="width: 45%;">@item.Description</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-7">
        <div class="card">
            <div class="card-header">
                <div class="row justify-content-between">
                    <div class="col-auto align-self-center">可以請求的 UrlReference</div>
                    @if( ApiKeyInfo != null )
                    {
                        <div class="col-auto">
                            <button class="btn btn-primary" onclick="AskUrlReference()">請求</button>
                        </div>
                    }
                </div>
            </div>
            <div class="card-body">
                <table class="table table-bordered w-100">
                    <thead class="thead-dark">
                        <tr>
                            <th style="width: 10%;">ID</th>
                            <th style="width: 45%;">FromUrl（不區分大小寫）</th>
                            <th style="width: 45%;">Description</th>
                        </tr>
                    </thead>
                    <tbody id="UnUrlReferences">
                        @if( UnUrlReferences != null )
                        {
                            foreach( UrlReference item in UnUrlReferences )
                            {
                                <tr>
                                    <td class="ID" style="width: 10%;">@item.ID</td>
                                    <td style="width: 45%;">@item.FromUrl</td>
                                    <td style="width: 45%;">@item.Description</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function AskApiKey() {
            let data = { UserEmail: '@Email' };

            fetch( '@Url.Action( "AskApiKey", "MyApiWithUrl" )', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include',
                body: JSON.stringify( data )
            } ).then( response => {
                return response.json();
            } ).then( result => {
                ShowStatusDialog( result );
            } );
        }

        function ShowStatusDialog( result, reload = false ) {
            Swal.fire( {
                icon: result.Result ? 'success' : 'error',
                text: result.Message,
                position: result.Result ? 'top-end' : 'center',
                timer: result.Result ? '2000' : undefined,
                showConfirmButton: !result.Result,
                backdrop: !result.Result,
                onClose: () => { if( reload ) location.reload(); }
            } );
        }
    </script>

    @if( ApiKeyInfo != null )
    {
        <script>
            window.onload = function () {
                document.querySelectorAll( '#UrlReferences tr, #UnUrlReferences tr' ).forEach( el => {
                    el.onclick = function () {
                        el.classList.toggle( 'active' );
                    }
                } );
            };

            function RemoveUrlReference() {
                let UserEmail = '@ApiKeyInfo.UserEmail';
                let urlReferences = document.querySelectorAll( '#UrlReferences tr.active td.ID' );
                if( urlReferences.length === 0 )
                    return Swal.fire( {
                        icon: 'warning',
                        text: '請先選擇想要刪除的UrlReference'
                    } );

                let list_ApiWithUrl = []

                urlReferences.forEach( el => {
                    list_ApiWithUrl.push( {
                        UserEmail,
                        UrlReferenceID: parseInt( el.textContent )
                    } );
                } );

                fetch( '@Url.Action( "RemoveUrlReference", "MyApiWithUrl" )', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify( list_ApiWithUrl )
                } ).then( response => {
                    return response.json();
                } ).then( result => {
                    ShowStatusDialog( result, true );
                } );
            }

            function AskUrlReference() {
                let UnUrlReferences = document.querySelectorAll( '#UnUrlReferences tr.active td.ID' );
                if( UnUrlReferences.length === 0 )
                    return Swal.fire( {
                        icon: 'warning',
                        text: '請先選擇想要請求的UrlReference'
                    } );

                let list_AskUrlReference = []

                UnUrlReferences.forEach( el => {
                    list_AskUrlReference.push( {
                        UserEmail: '@ApiKeyInfo.UserEmail',
                        ApiKey: '@ApiKeyInfo.ApiKey',
                        UrlReferenceID: parseInt( el.textContent )
                    } );
                } );

                fetch( '@Url.Action( "AskUrlReference", "MyApiWithUrl" )', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify( list_AskUrlReference )
                } ).then( response => {
                    return response.json();
                } ).then( result => {
                    ShowStatusDialog( result, true );
                } );
            }
        </script>
    }
}
