@model List<ApiProxy.Areas.DB.Models.ApiKeyInfo>
@section Styles {
    <style>
        .active {
            background-color: #ECECEC;
        }

        #input_UserEmail {
            width: 250px;
        }
    </style>
}
<div class="card">
    <div class="card-header">
        <div class="row justify-content-between">
            <div class="col-auto align-self-center">ApiKeyInfo</div>
            <div class="col-auto">
                <div class="row no-gutters">
                    <div class="col-auto mr-1">
                        <div class="input-group">
                            <input type="email" class="form-control" id="input_UserEmail" placeholder="apiproxy@apiproxy.com" />
                            <div class="input-group-append">
                                <button class="btn btn-primary" onclick="AddApiKeyInfo()">新增</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-auto"><button class="btn btn-danger" onclick="RemoveApiKeyInfo()">刪除</button></div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-bordered w-100">
            <thead class="thead-dark">
                <tr>
                    <th class="w-50">
                        UserEmail
                    </th>
                    <th class="w-50">
                        ApiKey
                    </th>
                </tr>
            </thead>
            <tbody id="ApiKeyInfos">
                @foreach( var item in Model )
                {
                    <tr>
                        <td class="UserEmail w-50">@item.UserEmail</td>
                        <td class="w-50">@item.ApiKey</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts{
    <script>
        window.onload = function () {
            document.querySelectorAll( '#ApiKeyInfos tr' ).forEach( el => {
                el.onclick = function () {
                    el.classList.toggle( 'active' );
                }
            } );
        };

        function AddApiKeyInfo() {
            let input_UserEmail = document.getElementById( 'input_UserEmail' );
            if( !input_UserEmail.checkValidity() )
                return Swal.fire( {
                    icon: 'warning',
                    text: input_UserEmail.validationMessage
                } );
            let userEmail = input_UserEmail.value;
            if( userEmail == '' ) 
                return Swal.fire( {
                    icon: 'warning',
                    text: '請輸入想要新增的UserEmail'
                } );

            let data = { UserEmail: userEmail };

            fetch( '@Url.Action("AddApiKeyInfo","ApiKeyInfo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include',
                body: JSON.stringify( data )
            } ).then( response => {
                return response.json();
            } ).then( result => {
                ShowStatusDialog( result );
            } );
        }

        function RemoveApiKeyInfo() {
            let userEmails = document.querySelectorAll( '#ApiKeyInfos tr.active td.UserEmail' );
            if( userEmails === null )
                return Swal.fire( {
                    icon: 'warning',
                    text: '請先選擇想要刪除的ApiKeyInfo'
                } );

            let list_UserEmail = [];
            userEmails.forEach( u => {
                list_UserEmail.push( u.textContent );
            } );

            fetch( '@Url.Action("RemoveApiKeyInfo","ApiKeyInfo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include',
                body: JSON.stringify( list_UserEmail )
            } ).then( response => {
                return response.json();
            } ).then( result => {
                ShowStatusDialog( result );
            } );
        }

        function ShowStatusDialog( result ) {
            Swal.fire( {
                icon: result.Result ? 'success' : 'error',
                text: result.Message,
                position: result.Result ? 'top-end' : 'center',
                timer: result.Result ? '2000' : undefined,
                showConfirmButton: !result.Result,
                backdrop: !result.Result,
                onClose: () => { if( result.Result ) location.reload(); }
            } );
        }
    </script>
}